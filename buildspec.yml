version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - kubectl version --client

  pre_build:
    commands:
      - echo "=== EKS Authentication Setup ==="
      - echo "AWS Identity:"
      - aws sts get-caller-identity
      - echo "EKS Clusters:"
      - aws eks list-clusters --region us-east-1
      - echo "Updating kubeconfig..."
      - aws eks update-kubeconfig --region us-east-1 --name eks-cluster-new
      - echo "Testing cluster access..."
      - kubectl cluster-info || echo "Cluster info failed, but continuing..."
      - kubectl get nodes || echo "Cannot get nodes, but continuing..."

  build:
    commands:
      - echo "=== Deploying Kubernetes YAMLs ==="
      - kubectl apply -f backend-deployment.yaml || echo "Failed to apply backend-deployment.yaml"
      - kubectl apply -f backend-service.yaml || echo "Failed to apply backend-service.yaml"
      - kubectl apply -f frontend-deployment.yaml || echo "Failed to apply frontend-deployment.yaml"
      - kubectl apply -f frontend-service.yaml || echo "Failed to apply frontend-service.yaml"
      - echo "Waiting for frontend rollout..."
      - kubectl rollout status deployment/frontend -n default --timeout=300s || echo "Frontend rollout failed"
      - echo "Waiting for backend rollout..."
      - kubectl rollout status deployment/backend -n default --timeout=300s || echo "Backend rollout failed"

  post_build:
    commands:
      - echo "=== Deployment Summary ==="
      - echo "Deployments:"
      - kubectl get deployments -n default || echo "Cannot get deployments"
      - echo "Pods:"
      - kubectl get pods -n default || echo "Cannot get pods"
      - echo "Services:"
      - kubectl get services -n default || echo "Cannot get services"

artifacts:
  files:
    - '**/*'
  base-directory: '.'
